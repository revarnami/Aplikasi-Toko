buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'realm-android'
apply plugin: 'kotlin-android-extensions'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        applicationId globalConfiguration.getAt("androidApplicationId")
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
        testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
        testApplicationId globalConfiguration.getAt("testApplicationId")

        multiDexEnabled true

        buildConfigField 'String', 'SERVER_URL', '"http://sg1.kadena.co.id:3000/api/"'
    }

    aaptOptions {
        additionalParameters "--no-version-vectors"
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    signingConfigs {
        debug {
            storeFile file('../config/buildsystem/joystok_debug.jks')
            storePassword '3nJ0ySt0k'
            keyAlias 'joystok_debug_key'
            keyPassword '3nJ0ySt0k'
        }
        release {
            storeFile file('../config/buildsystem/joystok_prod.jks')
            storePassword '34sy5t0k'
            keyAlias 'joystok_prod_key'
            keyPassword '345y5t0k'
        }
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            zipAlignEnabled false
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            jniDebuggable false
            zipAlignEnabled true
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies
    def dataDependencies = rootProject.ext.dataDependencies


    kapt presentationDependencies.daggerCompiler
    compile presentationDependencies.dagger
    compile presentationDependencies.supportRecyclerView
    compile presentationDependencies.supportCardView
    compile presentationDependencies.supportGridLayout
    compile presentationDependencies.supportDesign
    compile presentationDependencies.supportAppCompat
    compile presentationDependencies.rxJava
    compile presentationDependencies.rxAndroid
    compile presentationDependencies.glide
    compile presentationDependencies.rxKotlin
    compile presentationDependencies.constraintLayout

    provided presentationDependencies.javaxAnnotation

    compile dataDependencies.retrofit2
    compile dataDependencies.retrofit2Converter
    compile dataDependencies.retrofit2RxAdapter
    compile dataDependencies.gson
    compile dataDependencies.supportAnnotations
    compile dataDependencies.okHttpLoggingInterceptor

    androidTestCompile presentationTestDependencies.mockito
    androidTestCompile presentationTestDependencies.dexmaker
    androidTestCompile presentationTestDependencies.dexmakerMockito
    androidTestCompile presentationTestDependencies.espresso
    androidTestCompile presentationTestDependencies.espressoIntents
    androidTestCompile presentationTestDependencies.testingRunner
    androidTestCompile presentationTestDependencies.testingRules
    androidTestCompile presentationTestDependencies.supportAnnotations

}

kapt {
    generateStubs = true
}

/*
Resolves dependency versions across test and production APKs, specifically, transitive
dependencies. This is required since Espresso internally has a dependency on support-annotations.
*/
configurations.all {
    resolutionStrategy.force presentationDependencies.supportRecyclerView
    resolutionStrategy.force presentationDependencies.supportDesign
    resolutionStrategy.force dataDependencies.supportAnnotations
}
