/**
 * loopback-boilerplate
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.ItemVariant;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Item {
  
  @SerializedName("itemCode")
  private String itemCode = null;
  @SerializedName("categoryId")
  private Double categoryId = null;
  @SerializedName("itemName")
  private String itemName = null;
  @SerializedName("basePrice")
  private Double basePrice = null;
  @SerializedName("salePrice")
  private Double salePrice = null;
  @SerializedName("remarks")
  private String remarks = null;
  @SerializedName("isVariant")
  private Boolean isVariant = null;
  @SerializedName("inactive")
  private Boolean inactive = null;
  @SerializedName("id")
  private Double id = null;
  @SerializedName("itemVariant")
  private List<ItemVariant> itemVariant = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getItemCode() {
    return itemCode;
  }
  public void setItemCode(String itemCode) {
    this.itemCode = itemCode;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getCategoryId() {
    return categoryId;
  }
  public void setCategoryId(Double categoryId) {
    this.categoryId = categoryId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getItemName() {
    return itemName;
  }
  public void setItemName(String itemName) {
    this.itemName = itemName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getBasePrice() {
    return basePrice;
  }
  public void setBasePrice(Double basePrice) {
    this.basePrice = basePrice;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getSalePrice() {
    return salePrice;
  }
  public void setSalePrice(Double salePrice) {
    this.salePrice = salePrice;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getRemarks() {
    return remarks;
  }
  public void setRemarks(String remarks) {
    this.remarks = remarks;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getIsVariant() {
    return isVariant;
  }
  public void setIsVariant(Boolean isVariant) {
    this.isVariant = isVariant;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getInactive() {
    return inactive;
  }
  public void setInactive(Boolean inactive) {
    this.inactive = inactive;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getId() {
    return id;
  }
  public void setId(Double id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<ItemVariant> getItemVariant() {
    return itemVariant;
  }
  public void setItemVariant(List<ItemVariant> itemVariant) {
    this.itemVariant = itemVariant;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Item item = (Item) o;
    return (this.itemCode == null ? item.itemCode == null : this.itemCode.equals(item.itemCode)) &&
        (this.categoryId == null ? item.categoryId == null : this.categoryId.equals(item.categoryId)) &&
        (this.itemName == null ? item.itemName == null : this.itemName.equals(item.itemName)) &&
        (this.basePrice == null ? item.basePrice == null : this.basePrice.equals(item.basePrice)) &&
        (this.salePrice == null ? item.salePrice == null : this.salePrice.equals(item.salePrice)) &&
        (this.remarks == null ? item.remarks == null : this.remarks.equals(item.remarks)) &&
        (this.isVariant == null ? item.isVariant == null : this.isVariant.equals(item.isVariant)) &&
        (this.inactive == null ? item.inactive == null : this.inactive.equals(item.inactive)) &&
        (this.id == null ? item.id == null : this.id.equals(item.id)) &&
        (this.itemVariant == null ? item.itemVariant == null : this.itemVariant.equals(item.itemVariant));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.itemCode == null ? 0: this.itemCode.hashCode());
    result = 31 * result + (this.categoryId == null ? 0: this.categoryId.hashCode());
    result = 31 * result + (this.itemName == null ? 0: this.itemName.hashCode());
    result = 31 * result + (this.basePrice == null ? 0: this.basePrice.hashCode());
    result = 31 * result + (this.salePrice == null ? 0: this.salePrice.hashCode());
    result = 31 * result + (this.remarks == null ? 0: this.remarks.hashCode());
    result = 31 * result + (this.isVariant == null ? 0: this.isVariant.hashCode());
    result = 31 * result + (this.inactive == null ? 0: this.inactive.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.itemVariant == null ? 0: this.itemVariant.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Item {\n");
    
    sb.append("  itemCode: ").append(itemCode).append("\n");
    sb.append("  categoryId: ").append(categoryId).append("\n");
    sb.append("  itemName: ").append(itemName).append("\n");
    sb.append("  basePrice: ").append(basePrice).append("\n");
    sb.append("  salePrice: ").append(salePrice).append("\n");
    sb.append("  remarks: ").append(remarks).append("\n");
    sb.append("  isVariant: ").append(isVariant).append("\n");
    sb.append("  inactive: ").append(inactive).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  itemVariant: ").append(itemVariant).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
