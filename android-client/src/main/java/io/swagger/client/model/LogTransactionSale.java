/**
 * loopback-boilerplate
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class LogTransactionSale {
  
  @SerializedName("saleId")
  private Double saleId = null;
  @SerializedName("status")
  private String status = null;
  @SerializedName("remarks")
  private String remarks = null;
  @SerializedName("createdBy")
  private Double createdBy = null;
  @SerializedName("lastUpdatedBy")
  private Double lastUpdatedBy = null;
  @SerializedName("branchId")
  private Double branchId = null;
  @SerializedName("companyId")
  private Double companyId = null;
  @SerializedName("id")
  private Double id = null;
  @SerializedName("createdAt")
  private Date createdAt = null;
  @SerializedName("updatedAt")
  private Date updatedAt = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Double getSaleId() {
    return saleId;
  }
  public void setSaleId(Double saleId) {
    this.saleId = saleId;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getStatus() {
    return status;
  }
  public void setStatus(String status) {
    this.status = status;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getRemarks() {
    return remarks;
  }
  public void setRemarks(String remarks) {
    this.remarks = remarks;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getCreatedBy() {
    return createdBy;
  }
  public void setCreatedBy(Double createdBy) {
    this.createdBy = createdBy;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getLastUpdatedBy() {
    return lastUpdatedBy;
  }
  public void setLastUpdatedBy(Double lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getBranchId() {
    return branchId;
  }
  public void setBranchId(Double branchId) {
    this.branchId = branchId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getCompanyId() {
    return companyId;
  }
  public void setCompanyId(Double companyId) {
    this.companyId = companyId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getId() {
    return id;
  }
  public void setId(Double id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Date getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Date getUpdatedAt() {
    return updatedAt;
  }
  public void setUpdatedAt(Date updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogTransactionSale logTransactionSale = (LogTransactionSale) o;
    return (this.saleId == null ? logTransactionSale.saleId == null : this.saleId.equals(logTransactionSale.saleId)) &&
        (this.status == null ? logTransactionSale.status == null : this.status.equals(logTransactionSale.status)) &&
        (this.remarks == null ? logTransactionSale.remarks == null : this.remarks.equals(logTransactionSale.remarks)) &&
        (this.createdBy == null ? logTransactionSale.createdBy == null : this.createdBy.equals(logTransactionSale.createdBy)) &&
        (this.lastUpdatedBy == null ? logTransactionSale.lastUpdatedBy == null : this.lastUpdatedBy.equals(logTransactionSale.lastUpdatedBy)) &&
        (this.branchId == null ? logTransactionSale.branchId == null : this.branchId.equals(logTransactionSale.branchId)) &&
        (this.companyId == null ? logTransactionSale.companyId == null : this.companyId.equals(logTransactionSale.companyId)) &&
        (this.id == null ? logTransactionSale.id == null : this.id.equals(logTransactionSale.id)) &&
        (this.createdAt == null ? logTransactionSale.createdAt == null : this.createdAt.equals(logTransactionSale.createdAt)) &&
        (this.updatedAt == null ? logTransactionSale.updatedAt == null : this.updatedAt.equals(logTransactionSale.updatedAt));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.saleId == null ? 0: this.saleId.hashCode());
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    result = 31 * result + (this.remarks == null ? 0: this.remarks.hashCode());
    result = 31 * result + (this.createdBy == null ? 0: this.createdBy.hashCode());
    result = 31 * result + (this.lastUpdatedBy == null ? 0: this.lastUpdatedBy.hashCode());
    result = 31 * result + (this.branchId == null ? 0: this.branchId.hashCode());
    result = 31 * result + (this.companyId == null ? 0: this.companyId.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.createdAt == null ? 0: this.createdAt.hashCode());
    result = 31 * result + (this.updatedAt == null ? 0: this.updatedAt.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogTransactionSale {\n");
    
    sb.append("  saleId: ").append(saleId).append("\n");
    sb.append("  status: ").append(status).append("\n");
    sb.append("  remarks: ").append(remarks).append("\n");
    sb.append("  createdBy: ").append(createdBy).append("\n");
    sb.append("  lastUpdatedBy: ").append(lastUpdatedBy).append("\n");
    sb.append("  branchId: ").append(branchId).append("\n");
    sb.append("  companyId: ").append(companyId).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  updatedAt: ").append(updatedAt).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
